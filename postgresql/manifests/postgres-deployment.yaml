
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres  # Sets Deployment name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13-alpine # Sets Image
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "/opt/poststart.sh"]
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - mountPath: /opt/poststart.sh
              subPath: poststart.sh
              name: hookvolume
          livenessProbe:
            exec:
              command: ["psql", "-U", "admin", "-d", "postgresdb", "-c", "SELECT 1"]
            periodSeconds: 60
            initialDelaySeconds: 60
          startupProbe:
            exec:
              command: ["psql", "-U", "admin", "-d", "postgresdb", "-c", "SELECT 1"]
            periodSeconds: 15
            failureThreshold: 5
            initialDelaySeconds: 15

          resources:
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: hookvolume
          configMap:
            name: poststarthook
            defaultMode: 0755
status: {}
